#!/bin/sh

# Para que vayan gráficos y audio, es necesario tener sysfs y proc.
# Y para que arranque el servicio udev, y para poder configurar el governor a mano.
# Se supone que el kernel tiene las opciones CONFIG_DEVTMPFS=y, CONFIG_DEVTMPFS_MOUNT=y,
# por lo que en /dev el propio kernel tiene ya montado el devtmpfs que es donde udev o mdev
# crean los nodos de /dev.
mount -t sysfs sysfs /sys
mount -t proc proc /proc

# Ponemos a punto el governor
echo performance > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo performance > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
echo performance > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
echo performance > /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor

# Re-montamos el root como lectura/escritura.
mount -o remount,rw /

# OPCIONAL: Lanzamos udev para que nos detecte lo que conectemos dinámicamene,
# carge los modulos correspondientes y cree los nodos en /dev.
/etc/init.d/udev start >> /dev/null

# Si queremos levantar la red, descomentar esto. Ojo que será necesario tener
# cargados los módulos para el hardware de red de nuestra máquina.
# En la Pi4, con la lista mínima de módulos que cargamos manualmente
# no hace falta nada más.
#ifconfig eth0 up
#ip addr add 192.168.1.8/24 dev eth0
#ip route add default via 192.168.1.7

# Esto de devpst es para poder conectar por ssh, si no no nos podrá dar una PTY.
#mkdir /dev/pts
#mount -t devpts none /dev/pts -o gid=4,mode=620

# Levantamos si queremos el servidor SSH.
#/etc/init.d/dropbear start

# Esto configura la fuente y el teclado de la consola.
# Lee la configuración de /etc/default/console-setup y /etc/default/keyboard.
setupcon

# Es FUNDAMENTAL exportar $HOME, o los programas empezarán a salvar sus cosas en /,
# otros no encontrarán cosas que crees tener en /root porque las buscan en $HOME, etc.
export HOME=/root

# En caso de querer consola en vez de un único programa corriendo, descomentar esto.
# Manda el sh, lanzado en dos stages, a correr en tty1 a base de direccionar
# su entrada y su salida a /dev/tty1.
# Se puede usar bash pero depende de más basura de systemd.
setsid sh -c 'exec sh </dev/tty1 >/dev/tty1 2>&1'

# En caso de querer un único programa corriendo:
#setsid sh -c 'exec /usr/local/bin/retroarch </dev/tty1 >/dev/tty1 2>&1'

# Una vez que se sale del programa único, paramos udev (si es que lo hemos lanzado)
# y montamos el root como readonly.
# El desmontaje conlleva la sincronización de los discos.
/etc/init.d/udev stop >> /dev/null
mount / -o remount,ro

# Dependiendo de si quieres reiniciar o apagar al salir, usa una o la otra.
# Poweroff va con dos -f, sí, no es un error, es para que no contacte con el gestor de procesos, que no existe.
reboot -f
#poweroff -f -f
