PREPARAR LA TARJETA SD
======================

No hace falta ningún programa de Windows. Simplemente hazle este layout con GPARTED.
(OJO!!! Crea las particiones como tipo EXT4, da igual, luego lo vas a cambiar con FDISK. GPARTED NO SOPORTA EXFAT.):

New layout is pretty simple:
Part1: Starts from 1MB till the end of SD card minus 1MB at the end. Type: exFAT (code 7)
Part2: Starts from last 1MB of SD card with size of 1MB. Type: Unknown (A2, no existe pero es lo que hay que poner) 
And now dd u-boot binary to Part2.

Usando FDISK, pon el tipo de partición 7 para la primera partición (exFAT) y el tipo A2 para la segunda. Te dirá que el tipo 2A es desconocido, da igual porque la vas a machacar con el u-boot.img. 
El u-boot.img viene de:
https://github.com/MiSTer-devel/SD-Installer-Win64_MiSTer

Formatea la partición 1 como exFAT con: mkfs.exfat /dev/sdb1
(mkfs.exfat está en el paquete exfat-utils)

Y ahora simplemente te bajas los ficheros que han de ir en la SD, que están en la guía:
https://github.com/MiSTer-devel/Main_MiSTer/wiki/Setup-Guide
Y los metes en la tarjeta. Tienes que tener tres cosas principalmente: el directorio linux, y los archivos MiSTer y menu.rfb; Con eso ya arranca desde la SD porque le has
flasheado el uboot antes. A mayores, pues los cores que le quieras ir metiendo, cada uno tiene sus particularidades pero van el el raiz los rbf de cada core.

MEJORAR LA LATENCIA DE LOS USB
=============================

Crea el fichero
/media/fat/linux/u-boot.txt

Con el contenido
v=loglevel=4 usbhid.jspoll=1

Y reincia. Comprueba que todo está bien con:
systool -m usbhid -A jspoll

TECLADO EN CASTELLANO EN LA CONSOLA DE LINUX
============================================

Añade al final de /etc/profile:
loadkeys es

ROM JIFFYDOS PARA EL C64
========================

from a unix shell I did:

cat 901226-01.bin JiffyDOS_C64.bin JiffyDOS_C1541.bin > boot.rom

Where 901226-01.bin is the C64 BASIC ROM.

Then placed boot.com in my C64 directory on the micro SD card. The C64 core is called "C64".

CARGAR RÁPIDO CON JIFFYDOS Y SIN JIFFYDOS
========================================

Con JiffyDos:
Para listar, F1 e intro.
PARA CARGAR Y EJECUTAR: F5, F1 e intro.

Sin JiffyDOS, 
cargamos con: LOAD"*",8
y luego RUN

CARGAR JUEGOS EN TRD EN EL CORE DE ZX SPECTRUM
==============================================

Lo primero, como debes saber el core tiene la ROM del Spectrum en /media/fat/spectrum.rom
Vale, pues usa el spectrum.rom que viene con el REAL COMMANDER.
Ahora, simplemente inicia el core, inserta el TRD, pulsa F11, y en el menú elige el IANNA.BAS o como se llame. Listo.ç

Para resetear, ALT+F11.

Hay juegos que son autoarrancables, como el Fire&Ice. Para estos podrías hacer lo mismo, o bien lanzarlos a mano: 
-entrar en el TR-DOS (esto sale en el menú cargador del Spectrum si estás en modo 128K/+2 o Pentagon)
-ahí dale a la K para LIST si quieres ver los archivos, verás que hay uno llamado BOOT
-ahora dale a la R para RUN, e intro, y el juego irá.

PROGRAMA PARA CONVERTIR MODELINES DE XORG A video_mode DE LA MISTER
===================================================================

Simplemente es irle metiendo, en el órden en que salen en la página, los parámetros del modeline que quieras, y que puedes generar con el
generador de modelines de https://arachnoid.com/modelines/
NO copies los decimales del último parámetro del resultado (deberían ser ceros, de todos modos, pero no los copies).

#include <stdio.h>

int main () {
        float clock;
        int hdisp, hsyncstart, hsyncend, htotal, vdisp, vsyncstart, vsyncend, vtotal;

        printf ("CLOCK: ");
        scanf ("%f", &clock);
        printf ("HDISP: ");
        scanf ("%d", &hdisp);
        printf ("HSYNCSTART: ");
        scanf ("%d", &hsyncstart);
        printf ("HSYNCEND: ");
        scanf ("%d", &hsyncend);
        printf ("HTOTAL: ");
        scanf ("%d", &htotal);
        printf ("VDISP: ");
        scanf ("%d", &vdisp);
        printf ("VSYNCSTART: ");
        scanf ("%d", &vsyncstart);
        printf ("VSYNCEND: ");
        scanf ("%d", &vsyncend);
        printf ("VTOTAL: ");
        scanf ("%d", &vtotal);
    
        printf ("video_mode=%d,%d,%d,%d,%d,%d,%d,%d,%f\n", hdisp, hsyncstart - hdisp, hsyncend - hsyncstart, htotal - hsyncend,
                                                        vdisp, vsyncstart - vdisp, vsyncend - vsyncstart, vtotal - vsyncend,
                                                        clock * 1000);


CREAR IMÁGENES DE DISCO DURO DE ATARIST Y LUEGO MONTARLAS EN LINUX
==============================================================

PREVIO: El sistema y driver de discos original de Atari para los AtariST se llamaba AHDI. Tiene limitaciones del copón como que sólo puede arrancar desde particiones de tipo GEM de menos i igual de 16Megas,
luego tampoco se pueden hacer particiones GEM de más de 32MB, etc.. es una mierda.
TOTAL, que nosotros usamos HDDRIVER de: https://www.hddriver.net/en/
ES DE PAGO, el fichero se llama hddr1016.zip

Empezamos creando un fichero para contener la imágen de 200MB:
dd if=/dev/zero of=hdd200m.vhd count=200 bs=1M

Ahora creamos un DSK con el HATARI, lo montamos (se monta sin parámetros), y metemos en él los contenidos de hddr1016.zip
Reiniciamos el HATARI con el DSK del driver, y con la imágen de disco que acabamos de crear.
Entramos en el diskette A: desde GEM, y ejecutamos HDDRUTIL.APP
Una vez que haya cargado, seleccionamos el DEVICE (ventana del medio), y luego nos vamos a las opciones de arriba a MEDIUM->FORMAT. Formateamos. Luego nos vamos a MEDIUM->PARTITION.
Particionamos, creando una sola partición que ocupe todo el disco. No hace falta que especifiques un tipo de partición, ni que cambies ninguna otra opción.
Luego nos pide que reiniciemos. Reiniciamos y volvemos a cargar HDDRUTIL.APP.
En la ventana de arriba de las tres, seleccionamos el disco C:, y nos vamos a las opciones de arriba a FILE->INSTALL HDD DRIVER. Lo instalamos.
Ahora nos vamos otra vez a las opciones de arriba con el disco C: seleccionado, a SETTINGS->DEVICES AND PARTITIONS, y desmarcamos todo menos el 0.0, así no nos buscará todo lo demás en el arranque.
Ahora volvemos a FILE->INSTALL HDD DRIVER, y lo volvemos a instalar, ya con los settings que acabamos de configurar. Reiniciamos y listo.

Y ahora ya salimos de HATARI y ya podemos montar la imágen de disco así, paśandole el offset ya que como de costumbre estas imágenes tienen cosas antes de las particiónes:
sudo mount -t vfat -o loop,offset=1024 hdd200m.vhd hdd

Ahí ya metemos lo que queramos.
Tienes juegos instalados en disco a saco aquí:
https://atari.8bitchip.info/fromhd2.php#DL
Cuando un juego no vaya bien, búscalo aquí:
http://d-bug.mooo.com/klaz/

-Para descomprimir archivos .ARC en Linux, usa nomarch, que se puede instalar con apt-get.
-Para que un ejecutable se autoejecute en el inicio, simplemente mételo en AUTOBOOT. Tiene que tener extensión .PRG, los .TOS sólo hay que renombrarlos y ya.

-Si tienes que reinstalar el AMBERSTAR, sólo se instala desde una TOS 1.x. Desde una 2.x, al pedirnos el disco B no lo reconoce y no permite seguir la instalación.

IP ESTÁTICA EN LA MISTER (AL FIN!!!!)
=====================================

Créate un script en /Scripts, yo lo he llamado static_ip.sh, con este contenido y permisos de ejecución:

ifconfig eth0 up
ip addr add 192.168.1.39/24 dev eth0
ip route add default via 192.168.1.7
echo "nameserver 8.8.8.8" > /etc/resolv.conf

...Donde 192.168.1.7 es la IP del ordenador desde el que sales.
Tienes que tener una conexión cableada con IP estática en esa IP en el ordenador,
y tener el ordenador preparado para compartir la conexión WIFI, como haces para la Raspberry Pi (Ver en LINUX_KNOWLEDGE.TXT)
Tienes que ejecutar el comando para tener la IP estática.

CONECTAR POR WIFI USANDO UN PINCHO USB WIFI SOPORTADO POR EL KERNEL
===================================================================

¡¡CUIDADO!! Como el pincho que yo tengo no está soportado en el kernel, si se actualiza el kernel el pincho deja de funcionar
porque se nos borran el firmware blob y el módulo del kernel, y toda reinstalarlos siguiendo las instrucciones que voy a dar ahora.

LO PRIMERO, mi pincho WIFI está basado en el chipset RTL8188eu, que no viene soportado en el kernel.
Así que hay que proporcionar el módulo del kernel.

PUEDE QUE TENGAMOS QUE COMPILAR EL MÓDULO DEL KERNEL O PUEDE QUE NO.

CASO 1: NO HACE FALTA COMPILARLO
NORMALMENTE, SI NO CAMBIA LA VERSIÓN DEL KERNEL, TIENES EL MÓDULO YA PREPARADO Y SÓLO ES HACER:
cp rtl8188eu.ko /lib/modules/5.13-MiSTer/

CASO 2: NOS TOCA COMPILARLO PORQUE HA CAMBIADO LA VERSIÓN DEL KERNEL
Se hace así:
-Instalamos dependencias previas: apt-get install gcc-arm-linux-gnueabihf build-essential
-Clona el directorio del driver wifi: git clone --depth 1 https://github.com/ulli-kroll/rtl8188eu.git
-Clona el directorio de los sources del kernel de la MiSTer: git clone --depth 1 https://github.com/MiSTer-devel/Linux-Kernel_MiSTer.git
-De ambos directorios, borra su .git
-Entra en el directorio de los sources del kernel y haz:
make ARCH=arm mrproper && make ARCH=arm MiSTer_defconfig && make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- EXTRAVERSION=-MiSTer modules_prepare
-Ahora entra en el directorio de los sources del módulo wifi y haz:
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- clean && make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- KSRC=/home/manuel/src/mister/Linux-Kernel_MiSTer modules

FIN CASOS POSIBLES, LO QUE VIENE AHORA YA ES SIEMPRE IGUAL.

Ahora lo subimos a la MiSTer y lo copiamos a su sitio:

cp rtl8188eu.ko /lib/modules/5.13-MiSTer/

Y ejecutamos esto:

depmod -a
modprobe rtl8188eu

En este punto, podemos hacer iwconfig para ver que efectivamente el interface wifi nos aparece levantado.

Ahora vamos a configurar la conexión WIFI en sí.

Edita /media/fat/linux/wpa_supplicant.conf y pon ahí tu config wifi en el formato correcto, que es:
ctrl_interface=/run/wpa_supplicant
update_config=1
country=ES

network={
        ssid="tu_ssid_aqui"
        psk="tu_clave_aqui"
}

Ahora es cosa de reiniciar, ejecutar wifi.sh y listo.

***********Montar el VHD de MSDOS (AO486) para la MiSTer********************************************************************************

mount -o loop,offset=32256 msdos622.vhd /mnt

***********MONTAR LA IMÁGEN DE DISCO DEL CORE ZXNEXT PARA AÑADIRLE O QUITARLE COSAS*****************************************************

sudo mount -o loop,rw,offset=65536 boot.vhd /mnt

***********Montar un VHD de MSX para la MiSTer******************************************************************************************

---Averiguamos dónde empieza con parted. Necesitamos saberlo en BYTES para poder pasárselo a mount, NO en sectores como nos lo dice FDISK. Por eso usamos parted:

sudo parted msx.vhd
(parted) unit                                                             
Unit?  [compact]? B                                                       
(parted) p                                                                

Number  Start   	End         	      Size                     Type        File system  Flags
 1      	   65536B    131137535B  131072000B  primary  fat16

---Nos quedamos con el 65536. Y montamos así:

sudo mount -t vfat -o loop,offset=65536 msx.vhd /mnt/hdd

*********ACTUALIZAR LA MISTER********************************************************

Usa el script update_all de aquí:
https://github.com/theypsilon/Update_All_MiSTer
Es bajarse un ZIP, descomprimirlo en Scripts/Updates, y luego ejecutarlo. Entra en el menú la primera vez que lo ejecutes
pulsando UP. Allí cambia en la primera opción que los cores que te baje sean los de DB9.

*********NOTAS CORE PC98**************************************************************

Necesitas la BIOS, que puede estar en dos sitios distintos:
En /Games/Zet98/ con el nombre boot.rom
En /bootrom/ con el nombre Zet98.rom
Pero es el mismo fichero. Lo tienes en este hilo:
https://misterfpga.org/viewtopic.php?f=36&t=167&start=75

Pon GDC CLOCK a 2.5, viene puesto a 5 y eso jode algunos juegos.

Los juegos deben estar en .D88, y los puedes convertir desde cualquier otro formato con el Virtual Floppy Image Converter 011010,
que se baja de aquí:
https://www.vector.co.jp/download/file/win95/util/fh212773.html

Tienes muchos juegos ya traducidos y de todo en:
http://www.pc98.org/main.html
...Pero están en .HDI y se necesita que estén en HDF. Así que no te valen por ahora.

********INSTALAR LAS KICKSTART PARA WHDLOAD*********************************************

Tienes las ROMs ya preparadas en shared/Kickstarts

Cargas el ADF llamado INSTALLRTG.ADF, y dentro de él ejecutas INSTALLSHARE, que montará el directorio fat/games/amiga/shared, haciéndolo accesible desde Amiga.

Una vez hecho esto, nos vamos al CLI y hacemos:

makedir devs:kickstarts
mister:
cd kickstarts
copy ALL to devs:kickstarts

********ACTUALIZAR LA DISTRO AMIGA AGS+**************************************************

-Pones el LHA de la actualización en fat/games/amiga/shared
-Ahora arrancas el AGS+, cargas el ADF llamado INSTALLRTG.ADF, y dentro de él ejecutas INSTALLSHARE, que montará el directorio fat/games/amiga/shared, haciéndolo accesible desde Amiga.
RECUERDA que tienes que marcar lo de VENTANA->MOSTRAR->TODOS LOS FICHEROS para poder ver los archivos de la carpeta SHARED.
-Abres el LHA de actualización con el mARK (en la barra de arriba), lo descomprimes a RAM:, y dentro hay un script de actualización.
Se ejecuta y ya.

*********HACER QUE EL UPDATE_ALL NO ACTUALIZE LOS CHEATS*********************************

Editamos /media/fat/downloader.ini y añadimos:

[mister]
filter = !cheats

Hay otros filtros. La lista está aquí: 
https://github.com/MiSTer-devel/Distribution_MiSTer#list-of-tags-that-you-may-use-with-the-downloader-and-the-custom-download-filters-feature


COMO LO VENIMOS HACIENDO AHORA MISMO:

[mister]
filter = !cheats !acornatom !acornelectron !alicemc10 !altair8800 !apogee !apple-i !aquarius !atari2600 !ay-3-8500 !bk0011m !channelf !arcadia !archie !astrocade !chess !chip8 !coco2 !edsac !flappybird !galaksija !gameoflife !handheld2p !interact !jupiter !laser !laser310 !multicomp !odyssey2 !ondra_spo186 !orao !pdp1 !pmd85 !ql !rx78 !sharpmz !sordm5 !specialist !tatungeinstein !ti994a !trs-80 !uk101 !vc4000 !vector-06c !zx81
