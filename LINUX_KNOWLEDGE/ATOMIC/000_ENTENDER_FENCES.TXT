==================================================================================================================================================
CÓMO PENSAR Y ENTENDER CORRECTAMENTE EL USO DE FENCES (=entender que son para proteger el acceso a un buffer, entender que en realidad es como que sólo hay una valla porque el buffer es como un huerto con una sola entrada aunque en esa entrada pongamos dos vcallas en el mismo sitio y cada una esté controlada por un tío).
==================================================================================================================================================

**AL NIVEL MÁS BÁSICO Y COMPRENSIBLE POSIBLE: 
TENEMOS UN BUFFER AL QUE ACCEDEN EL DISPLAY (KMS) Y LA GPU (GL), PERO NO PUEDEN ACCEDER
A ÉL A LA VEZ, ASÍ QUE ES COMO TENER UN HUERTO CON UNA SOLA ENTRADA Y DOS VALLAS UNA DETRÁS DE OTRA: UNA VALLA LA CONTROLA KMS Y LA OTRA LA CONTROLA LA GPU. COMO SÓLO TENEMOS UNA ENTRADA, DECIMOS QUE SÓLO HAY UNA VALLA, PERO EN REALIDAD SON DOS VALLAS COLOCADAS EN EL MISMO LUGAR.
COMO KMS ES DEL KERNEL, Y COMO EL KERNEL SÓLO ENTIENDE FILE DESCRIPTORS (FD, EN UNIX TODO ES UN FICHERO),
LO QUE HACEMOS ES SIMPLEMENTE:

1) CREAR UN OBJETO VALLA DE LA GPU, QUE SE USARÁ LUEGO PARA DECIRLE A KMS QUE ANTES DE APLICAR LS CAMBIOS QUE LE PEDIREMOS EN EL ATOMIC_COMMIT TIENE QUE ESPERAR HASTA QUE LA GPU ACABE LOS COMANDOS DEL GL CMDSTREAM CORRESPONDIENTES A UN FRAME. POR ESO LA CREAMOS NADA MÁS ENTRAR EN SWAPBUFFERS, PORQUE ES JUSTO AHÍ DONDE EL CMDSTREAM DE GL TIENE LOS COMANDOS QUE FORMAN UN FRAME. (create_fence)

2) METER LA VALLA DE LA GPU EN EL CMDSTREAM DE GL (eglSwapBuFFERS)

3) UNA VEZ METIDA EN EL CMDSTREAM, EXPORTAR LA VALLA DE LA GPU AL FENCE_IN_FD PARA PODER METERLA EN EL KERNEL. (eglDupNativeFenceFDANDROID)

4) PREPARAR, DE CARA AL ATOMIC COMMIT, LO QUE ENTRA Y LO QUE SALE DEL KERNEL:

   1) METEMOS FENCE_IN_FD EN LA PROP IN_FENCE_FD DEL PLANO PRIMARIO, QUE ES COMO METEMOS LA VALLA DE LA GPU EN EL KERNEL, PARA DECIRLE A KMS QUE 
   ESPERE EN ESA VALLA ANTES DE HACER LOS CAMBIOS QUE SOLICITAMOS EN EL ATOMIC_COMMIT (O SEA, ANTS DE HACER EL PAGEFLIP, NO ENSEÑES EL HUERTO HASTA 
   QUE ESTÉ ACABADO!!!).
   (add_plane_property(IN_FENCE_FD))

   2) SACAMOS FENCE_OUT_FD DEL LA PROP OUT_FENCE_FD DEL CRTC. ESTO ES PORQUE LUEGO IMPORTAREMOS FENCE_OUT_FD A UN OBJETO VALLA QUE USAREMOS PARA 
   DECIRLE A LA GPU QUE ANTES DE EJECUTAR LOS COMANDOS DEL CMDSTREAM DE GL, SE ESPERE A QUE KMS HAYA COMPLETADO LOS CAMBIOS SOLICITADOS EN EL EL 
   ATOMIC COMMIT (SIENDO ESOS CAMBIOS EL PAGEFLIP. NO TE METAS A TRABAJAR EL EL HUERTO MIENTRAS LO ESTÁN ADMIRANDO!!!)
   (add_plane_property(OUT_FENCE_PTR))

5) IMPORTAMOS COMO HEMOS DICHO EL FENCE_OUT_FD A UN OBJETO VALLA. (create_fence)

6) USAMOS EL OBJETO VALLA QUE HEMOS OBTENIDO DE FENCE_OUT_FD PARA DECIRLE A LA GPU QUE ANTES DE EJECUTAR LOS COMANDOS DEL CMDSCREAM DE GL ESPERE A 
   QUE KMS HAYA ACABADO DE REALIZAR LOS CAMBIOS SOLICITADOS EN EL ATOMIC_COMMIT (ES DECIR, EL PAGEFLIP).
   eglWaitSyncKHR().
   
EN CONCLUSIÓN:
SE TRATA DE DECIRLE A KMS QUE ANTES DE ACCEDER AL BUFFER SE ESPERE A QUE LA GPU (GL) ACABE DE ACCEDER A ÉL, Y DE DECIRLE A LA GPU QUE ANTES DE ACCEDER AL BUFFER SE ESPERE A QUE EL DISPLAY (KMS) ACABE DE ACCEDER A ÉL.

DICHO DE UN MODO UN POCO MÁS COMPLETO: SE TRATA DE DECIRLE A KMS QUE ANTES DE ACCEDER AL BUFFER ESPERE A QUE LA GPU ACABE DE DIBUJAR EN ÉL, Y DE DECIRLLE A LA GPU QUE ANTES DE EMPEZAR A DIBUJAR EN EL BUFFER ESPERE A QUE KMS COMPLETE LOS CAMBIOS SOLICITADOS EN EL ATOMIC_COMMIT (EL PAGEFLIP).
PERO NINGUNA DE ESTAS ESPERAS BLOQUEAN EL PROGRAMA: SON INSTRUCCIONES DE "ESPERA FUTURA" QUE SE LE DAN TANTO AL DISPLAY (KMS) COMO A LA GPU (GL) PARA QUE LLEGADO EL CASO SE ESPEREN EL UNO AL OTRO PARA NO ACCEDER A LA VEZ AL BUFFER, Y ESPERAN FUERA DE NESTRO CONTROL.
 
EN CONCLUSIÓN: ES COMO SI TUVIÉRAMOS SÓLO UNA VALLA, PORQUE SÓLO HAY UN BUFFER CUYO ACCESO HAY QUE PROTEGER (ES DECIR, ES COMO TENER UN HUERTO CON UNA SOLA ENTRADA, ESA ENTRADA SERÍA LA VALLA PERO TENEMOS PUESTAS DOS VALLAS EN ESA ENTRADA, UNA CONTROLADA POR LA GPU Y OTRA CONTROLADA POR KMS).

LOS FENCES SON PARA PROTEGER EL ACCESO A UN BUFFER Y QUE NO HAYA TEARING. EL MECANISMO TE LO ACABO DE EXPLICAR Y ES SENCILLO.
