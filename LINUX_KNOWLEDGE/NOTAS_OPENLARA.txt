EL PLATFORM SDL2: NOTAS POR SI TIENES QUE AJUSTAR COSAS EN EL FUTURO
===============================================================

Para que renderize usando GLES en vez de GL, pasamos -DSDL2_GLES y -lGLESv2 -lEGL en src/platform/sdl2/build.h. Si no se pasa eso, pues se usa GL normal.

El pasar -DSDL2_GLES lo que provoca es que en core.h se active el #ifdef SDL2_GLES dentro de #elif __SDL2__
Esto simplemente significa que se usará GLES, pero NO SIGNIFICA QUE SEA GLES1 o GLES2, LA VERSIÓN DE GLES NO SE ESPECIFICA, sino que se averigua en el código, en gapi/gl.h,
busca "GLES_VERSION =", y verás que SE SACA DE LA VERSIÓN QUE DICE GLES QUE SE ESTÁ USANDO, Y PUEDE COINCIDIR CON LA QUE LE HEMOS PEDIDO EN 
SDL_GL_SetAttribute(SDL_GL_CONTEXT_MAJOR_VERSION, 2); 
SDL_GL_SetAttribute(SDL_GL_CONTEXT_MINOR_VERSION, 0);
...O NO COINCIDIR. Perom vamos, que se averigua luego la versión.

MANEJO DE BUFFERS DE RENDERING, O CÓMO HACER QUE EL JUEGO CORRA EN BAJA RESOLUCIÓN Y SEA ESCALADO A PANTALLA COMPLETA: RENDERIZANDO A UN FBO Y LUEGO ESCALANDO ESE FBO
===============================================================================================================================================================

EN ../../gapi/gl.h

El framebuffer al que se renderiza por defecto (sin que hagamos nada para ello, simplemente al que GL renderiza por defecto) lo pilla y lo guarda en esta línea:

glGetIntegerv(GL_FRAMEBUFFER_BINDING, (GLint*)&defaultFBO);

...porque luego, a veces, al entrar en el menú y así, se cambia el framebuffer, en la función bindTarget()

