LAKKA ESTABLE EN PICADE
=======================

Lo único especial que hay que hacer es hacer funcionar el PIHAT para el tema de los controles, y decirle qué salida de audio queremos usar.
Veamos cómo hacemos todo ello.

NOTA: Para hacer pruebas rápidas (cuando modificamos config.txt o cmdline.txt), es aconsejable montar la partición de arranque como r/w:
mount -o remount,rw /flash

####BLOQUE Pi 4####

Nos bajamos el fichero: 
wget https://raw.githubusercontent.com/pimoroni/picade-hat/master/picade.dts

Y compilamos el DTS así:
dtc -I dts -O dtb -o picade.dtbo picade.dts
Lo metemos /LAKKA/overlays (o en /flash/overlays/ si lo estamos haciendo desde el propio Lakka por ssh)

Ahora editamos /LAKKA/config.txt y añadimos:
hdmi_force_hotplug=1
#Esto es para que los seis botones manden las pulsaciones de las teclas Z,X,C,V,B,N, en lugar de las teclas que envían por defecto,
#que no nos interesan porque incluyen CTRL, ALT, etc.. ya que provocan caractes raros en la consola. Los valores vienen de showkeys.
dtoverlay=picade,button1=44,button2=45,button3=46,button4=47,button5=48,button6=49
dtparam=audio=off
arm_freq=1800
..Y ponemos force_turbo a 1, para que siempre vaya la CPU a velocidad máxima.
OJO!!!! NO PONGAS dtparam=audio=off EN MONTAJES DONDE QUIERAS SACAR EL SONIDO POR HDMI!! ES SÓLO PARA PICADE Y SIMILARES
QUE LLEVAN SONIDO POR HIFIBERRY!!!

###FIN BLOQUE PI 4####

####BLOQUE Pi 5 (OJO!! La pantalla no va si conectas la alimentación al hat, la tienes que conectar directamenre a la Pi5!!)####

Nos bajamos el fichero (OJO! es de un branch que se llama feature/pi5, no del main): 
wget https://raw.githubusercontent.com/pimoroni/picade-hat/feature/pi5/picade.dts
Y le hacemos:
dtc -I dts -O dtb -o picade.dtbo picade.dts
Lo metemos /LAKKA/overlays (o en /flash/overlays/ si lo estamos haciendo desde el propio Lakka por ssh)

Editamos config.txt y añadimos:

dtoverlay=picade
hdmi_force_hotplug=1
usb_max_current_enable=1

(OJO!! Lo de "usb_max_current_enable=1" es MUY importante o el monitor no funcionará!!)

###FIN BLOQUE PI 5####

Desde dentro de LAKKA (entramos por SSH):
Nos bajamos el fichero de rules y lo copiamos a su sitio:
wget https://raw.githubusercontent.com/pimoroni/picade-hat/master/etc/udev/rules.d/10-picade.rules
cp 10-picade-rules /etc/udev/rules.d/

Ahora editamos /LAKKA/cmdline.txt y añadimos:
video="HDMI-A-1:1024x768@60" mitigations=off audit=0 vt.global_cursor_default=0 console=null fsck.mode=skip

(NOTA NO NECESARIA EN LAKKA: Para que funcione el botón de apagado (poweroff/shutdown) en Raspberry Pi OS necesitamos
que el servicio systemd-logind esté activo, que a su vez depende de que tengamos instalado el paquete "dbus"
y que tengamos systemd-journald.service y systemd-journald.socket activos también.
Para activar systemd-logind, se haría con el viejo interface sysvinit:
service systemd-logind enable
service systemd-logind start
Si no está activo systemd-logind, el sistema recibe el keycode 116 pero no se apaga.
EN TEORÍA es posible hacer lo mismo sin systemd, según la documentación original del overlay "gpio-shutdown":
https://github.com/raspberrypi/firmware/blob/915a7080ccfbf253053e249bde6489a5be908498/boot/overlays/README#L1273
).

Ahora editamos desde el PC el fichero LAKKA_DISK/.config/retroarch/retroarch.cfg y en audio_device ponemos:
hw:CARD=sndrpihifiberry
(NOTA: Antes usaba "sysdefault:CARD=sndrpihifiberry", pero se supone que "hw:CARD=sndrpihifiberry" es más directo según "aplay -L").
Lo normal sería irnos a SETTINGS->AUDIO->OUTPUT y en DEVICE lo elegimos, pero por si no te deja elegirlo desde el mando,
pues lo mejor es eso, editar el fichero de configración a mano.

Si elegimos el driver de vídeo Vulkan, en ~/.config/retroarch/retroarch.cfg, pon el modo de vídeo que usa el sistema en los parámetros:
(OJO, no te olvides de deshabilitar temporalmente el salvado automático de la configuración al salir de RetroArch, porque si no,
lo que vas a cambiar en retroarch.cfg se sobreescribirá al reiniciar)

video_fullscreen = "true"
video_fullscreen_x = "1024"
video_fullscreen_y = "768"

Y así ya usará en modo de vídeo de 1024x768 a 60Hz y no el de 1152x864 a 75Hz que es el preferido del monitor
pero que NO nos conviene (recuerda que RetroArch, cuando se usa el driver Vulkan, pone el modo de vídeo preferido
del monitor, que en este caso es a 75Hz y no nos conviene para nada).

Puedes bajar la latencia de audio a 45ms con el driver ALSA.
Se podría bajar a 32ms con 44100Hz en vez de 48000Hz.

Para que se vea bien con INTEGER puesto a OFF, puedes coger el shader FAKELOTTES, copiarlo a LAKKA_DISK/shaders,
y comentar la curvatura y las "extra masks" en el código del shader (de ese modo no pierdes mucha velocidad debido al shader).
Los parámetros modificados para que no se vean patrones en las scanlines y que no haga daño a la vista son:
Scanline Intensity	- 20
CRT Gamma			- 2.20
Monitor Gamma		- 2.50

Puedes usar el mismo shader para los juegos verticales si le pones SCANLINE INTENSITY a 0: Crea un directorio arcade_vertical
para meter allí todos los juegos verticales, y luego salva los parámetros del shader para ese directorio solamente.

Para mapear los botones a otras teclas distintas en vez de las que vienen por defecto, se hace mediante dparams del dtoverlay=picade,
mira esto: https://github.com/pimoroni/picade-hat
Y en particular esto: https://github.com/pimoroni/picade-hat/blob/master/picade.txt

Para añadir juegos a una PLAYLIST, lo vamos a ver con los juegos arcade de FBNeo como ejemplo.
Vamos a IMPORT CONTENT->MANUAL SCAN y ahí:
-En CONTENT DIRECTORY, seleccionamos el directorio que queremos escanear
-En SYSTEM NAME elegimos "FBNeo - Arcade Games"
-En DEFAULT CORE elegimos "Arcace (Final Burn Neo)"
-En ARCADE DAT FILE elegimos la última versión del fichero "Final Burn Neo (ClrMame Pro XML, Arcade only)" que nos podemos bajar de:
https://github.com/libretro/FBNeo/tree/master/dats
(Yo suelo meter el DAT en /storage/roms/Downloads)
...Y una vez que lo tenemos todo le damos a START SCAN abajo del todo y esperamos.
Esto tenemos que hacerlo contra ROMs descargadas de https://www.retroroms.info, yéndonos a "FBNeo" y luego a "currentroms",
ya que son las más actuales y se supone que son contra las que se ha creado el DAT.

Otra manera (¡¡¡¡¡NO RECOMENDADA!!!!) más automática sería dándole a IMPORT CONTENT (el icono que tiene un signo "[+]")
y luego a SCAN DIRECTORY y entrando en el directorio de ROMs que quieras escanear. Déjalo acabar y en el menú principal te saldrá
la nueva playlist. Ahora puedes irte a SETTINGS->PLAYLISTS->MANAGE PLAYLISTS y asignarle un DEFAULT CORE a cada una de ellas, o borrarla
o lo que quieras. PERO tienen las versiones de las ROMs tienen que coincidir con las del DAT que trae el LAKKA, y es un lio porque
unos juegos te van a coincidir con el DAT de un core, y otros con el DAT de otro core. Así que HAZLO CON "MANUAL SCAN" COMO SE HA EXPLICADO
ANTES.

Para tener carátulas (thumbnails) debes hacer que LAKKA añada los juegos a una PLAYLIST, luego tenemos dos opciones:
La más sencilla es conectar el sistema a Internet, e ir a Main Menu->Online Updater->Playlist Thumbnail Updater para que se descarguen solas
las carátulas de la playlist que queramos.
La otra, más LENTA y complicada, es meter a mano los THUMBNAILS de los sistemas que quieras en /storage/thumbnails, y ya se verán en las playlist.

Para cambiar el logo de Lakka durante el inicio, ponemos el PNG que queramos en la partición LAKKA, llamándolo "oemsplash.png" 
Tiene que ser un PNG de 1920x1080, o no se mostrará. Como la pantalla es 4:3 (1024x768), nos conviene coger una imágen en 4:3
y convertirla a 1920x1080 sin respetar el ratio original (luego al verse en pantalla se verá en 4:3, no te preocupes).
Por ejemplo, cogemos esta imágen: https://github.com/anthonycaccese/es-theme-picade/blob/master/_inc/images/splashscreen.png
..que es de 1024x768, y la escalamos a 1920x1080 sin respetar el ratio, así:
convert splashscreen.png -resize 1920x1080! splash.png
(El comando "convert" es parte del paquete imagemagik de GNU/Linux)-
También podemos simplemente crear un archivo vacío con ese nombre y no se verá nada, haciendo
"touch /media/manuel/LAKKA/oemsplash.png" desde el ordenador.
Esto, junto con "vt.global_cursor_default=0 console=null" que tendremos en cmdline.txt, hará que no se vea nada durante el inicio. 


--CONECTAR LOS JOYSTICKS Y BOTONES DE 2 JUGADORES DIRECTAMENTE AL GPIO (PARA MÁQUINAS ARCADE GRANDES)--

En config.txt se carga el overlay gpio-keyboard, que es de propósito general, se conectar los pines siguiendo este esquema:
https://discourse.osmc.tv/t/how-to-use-harware-buttons-on-raspberry-pi-zero-with-gpio-key/86594

Y en config.txt asignamos los GPIO a pulsaciones de teclado así:

##### PLAYER 1 #####

# Down, up, left, right
dtoverlay=gpio-key,gpio=2,active_low=1,gpio_pull=up,keycode=103
dtoverlay=gpio-key,gpio=3,active_low=1,gpio_pull=up,keycode=108
dtoverlay=gpio-key,gpio=4,active_low=1,gpio_pull=up,keycode=105
dtoverlay=gpio-key,gpio=17,active_low=1,gpio_pull=up,keycode=106

# select (rshift), start (enter)
dtoverlay=gpio-key,gpio=27,active_low=1,gpio_pull=up,keycode=54
dtoverlay=gpio-key,gpio=22,active_low=1,gpio_pull=up,keycode=28

# x,z,w
dtoverlay=gpio-key,gpio=10,active_low=1,gpio_pull=up,keycode=44
dtoverlay=gpio-key,gpio=9,active_low=1,gpio_pull=up,keycode=45
dtoverlay=gpio-key,gpio=11,active_low=1,gpio_pull=up,keycode=17

# a,s,q
dtoverlay=gpio-key,gpio=0,active_low=1,gpio_pull=up,keycode=30
dtoverlay=gpio-key,gpio=5,active_low=1,gpio_pull=up,keycode=31
dtoverlay=gpio-key,gpio=6,active_low=1,gpio_pull=up,keycode=16

##### PLAYER 2 #####

# i,k,j,l (up,down,left,right)
dtoverlay=gpio-key,gpio=14,active_low=1,gpio_pull=up,keycode=23
dtoverlay=gpio-key,gpio=15,active_low=1,gpio_pull=up,keycode=37
dtoverlay=gpio-key,gpio=18,active_low=1,gpio_pull=up,keycode=36
dtoverlay=gpio-key,gpio=23,active_low=1,gpio_pull=up,keycode=38

# c, v, e
dtoverlay=gpio-key,gpio=21,active_low=1,gpio_pull=up,keycode=46
dtoverlay=gpio-key,gpio=20,active_low=1,gpio_pull=up,keycode=47
dtoverlay=gpio-key,gpio=16,active_low=1,gpio_pull=up,keycode=18

# d, f, r
dtoverlay=gpio-key,gpio=1,active_low=1,gpio_pull=up,keycode=32
dtoverlay=gpio-key,gpio=7,active_low=1,gpio_pull=up,keycode=33
dtoverlay=gpio-key,gpio=8,active_low=1,gpio_pull=up,keycode=19

# period,comma (select,start)
dtoverlay=gpio-key,gpio=24,active_low=1,gpio_pull=up,keycode=51
dtoverlay=gpio-key,gpio=25,active_low=1,gpio_pull=up,keycode=52
