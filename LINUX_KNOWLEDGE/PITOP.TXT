-Que poweroff apague el ordenador:
Clona el repo de wiringpi y lo instalas:
git clone git://git.drogon.net/wiringPi
./build
(Al ejecutar build se compila y se instala)

Clona este repo:
https://github.com/rricharz/pi-top-install
Haz make, y luego sudo install_poweroff

Tienes que tener el spi activo en config.txt

==========PITOP-SPEAKER VERSIÓN 2=====================

-Las instrucciones están en:
https://github.com/pi-top/pi-topSPEAKER/blob/master/manual-install/manual-configuration-speaker-v2.md

-En config.txt tendremos:

hdmi_drive=2

dtparam=i2c_arm=on
dtparam=i2s=on

dtoverlay=vc4-kms-v3d
dtoverlay=hifiberry-dac
dtoverlay=i2s-mmap

NO tienes que tener dtparam=audio=on ni nada de eso.
Con estas cosas correctamente en /boot/config.txt, ya tiene que sonar speaker-test PERO NO LO PRUEBES SIN EL CONTROL DE VOLÚMEN, que te quema el altavoz.

Para el control de volúmen, tenemos que tener /etc/asound.conf así:

pcm.real {
        type hw
        card 0
        device 0
}

pcm.dmixer {
        type dmix
        ipc_key 1024
        ipc_perm 0666
        slave.pcm "real"
        slave {
                period_time 0
                period_size 1024
                buffer_size 8192
                rate 44100
        }
        bindings {
                0 0
                1 1
        }
}

ctl.dmixer {
        type hw
        card 0
}

pcm.softvol {
        type softvol
        slave.pcm "dmixer"
        control {
                name "PCM"
                card 0
        }
}

pcm.!default {
        type plug
        slave.pcm "softvol"
}

Y poner en ~/.profile:
sudo alsactl -f /etc/hifiberry-alsactl.restore restore 0

El fichero hifiberry-alsactl.restore lo tienes en:
https://github.com/pi-top/Device-Management/blob/master/assets/hifiberry-alsactl.restore

El volúmen se ajusta en /etc/hifiberry-alsactl.restore, poniendo value.1 y value.2 a un valor entre 0 y 255.

==========PITOP-SPEAKER VERSIÓN 1 (NO MERECE LA PENA: ÚSALO SÓLO EN RISC OS. PARA LINUX USA EL V2)=====================

-Las instrucciones están en:
https://github.com/pi-top/pi-topSPEAKER/blob/master/manual-install/manual-configuration-speaker-v1.md

-Lo primero instala pyhton3:
sudo apt-get install pyhton3 pyhton3-systemd pyhton3-smbus no-install-recommends

-Crea este script y guárdalo en /usr/bin/topspeak:

#! /usr/bin/python3
import configuration as speakercfg
host_device_type = 1 
speakercfg.initialise(host_device_type, "pi-topSPEAKER-v1")
speakercfg.enable_device()

(Tienes que tener configuration.py en el mismo directorio que el script, y él lo carga como configuration simplemente, ya sabe que acaba en .py. Para eso lo mandamos a
/usr/bin más abajo, junto con los .py necesarios)

-Instalamos las herramientas i2c:
sudo apt-get install i2c-tools
Vemos que lo detecta bien:
sudo i2cdetect -y 1
Si no lo detecta, sudo modprobe i2c_dev
(Tienes que tener cargado el módulo i2c_bcm2835 también)
-Tienes que tener dtparam=audio=on en el config.txt, para que se cargue el módulo bcm2835 que permite el audio por HDMI.

-Pon que se arranque el módulo i2c_dev en el inicio, añadiéndolo para ello a /etc/modules
(si no lo haces dará un error writting el script, pero funciona igual en realidad)

-Clona el repo:
https://github.com/pi-top/Device-Management.git

-Clona el repo:
https://github.com/pi-top/pi-topSPEAKER.git

-Copia todo lo de pi-topSPEAKER/library a /usr/bin, para que así esté junto con el script topspeak

-Copia los módulos de Device-Management/library/ptcommon a /usr/local/lib/pthon3.5/dist-packages/ptcommon
(crea manualmente /usr/local/lib/pthon3.5/dist-packages/ptcommon antes)

-Al ejecutar topspeak, mi script de ahí arriba, ahora te dará un errorazo de python que si te fijas es porque no tiene raspi-config para verificar cómo tienes el i2c.
Pues nada, editamos vim /usr/local/lib/python3.5/dist-packages/ptcommon/sys_config.py, que es donde da el error (ahora mismo es en la línea 69, pero eso puede cambiar),
y simplemente hacemos que 
i2c_output = 0;
La cosa es que no intente llamar a str(_SystemCalls._get_cmd_resp(_SystemCalls.GET_I2C_CMD_ARR)).rstrip(), que por debajo llama a raspi-config.
Y listo.
