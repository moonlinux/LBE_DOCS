ENCARGAR LAS PLACAS EN JLCPCB
=============================

Clonamos el repo: git clone --depth 1 https://github.com/harbaum/MiSTeryNano.git

PARTE 1: PLACA MISTERY SHIELD 20K

Lo que vamos a necesitar está en: board/misteryshield20k/jlcpcb

Entramos en: http://www.jlcpcb.com
Le damos a ORDER NOW.

Ahí vamos haciendo lo siguiente:
-Subimos el ZIP "gerber_m0s.zip" que es el que contiene el GERBER. Usamos la variante "gerber_m0s.zip" porque nos interesa usar
la plaquita M0S PMOD que vamos a encargar a parte. Nos interesa esta variante de la placa principal que usa la M0S externa
por comodidad: andar usando el M0S (BL616) interno de la Tang Nano 20k es mucho más incómodo para el tema de los flasheos: M0S externa SIEMPRE.

EN PCB SPECIFICATIONS:
-Ponemos "Surface Finish" a "ENIG", ya que permite que la placa almacenada dure más tiempo.

EN HIGH SPEED OPTIONS:
-Activamos "Confirm production file"
(OPCIONAL)-Si queremos conectores de oro, activamos "Gold Fingers" lo que nos obligará a poner en PCB SPECIFICATIONS el "Surface Finish" a "ENIG" 

EN PCB ASSEMBLY:
-Dejamos "PCBA Type" en "Economic" ("Standard" sería si tuvese componentes por los dos lados, que no es el caso).
-Dejamos "Assembly Side" en "Top Side" (La placa sólo tiene componentes por la parte superior).
-Activamos "Confirm Parts Placement"

EN ADVANCED OPTIONS:
-Activamos: "Board Cleaning", "Bake Components" y "Depanel boards"

Le damos a CONFIRM, y en el siguiente menú tendremos que subir el BOM (bom_m0s.csv) y el CPL (positions_m0s.csv)
Le damos a "Process BOM & CPL"

En "Product Description", lo mejor es poner "Audio Equipment".

En el método de envío, he usado IOSS, que se supone que ya incluye los impuestos en el momento de hacer el pago con tarjeta,
y que como son menos de 150 euros no hay que pagar más luego.

PARTE 2: PLACA M0S PMOD

Lo que vamos a necesitar está en: board/m0s_pmod/jlcpcb

Se hace igual y los ficheros se llaman igual pero sin lo de _m0s al final: gerber.zip, bom.csv y positions.csv

FLASHEAR EL CORE DE ATARI ST Y LAS TOS
======================================

-Flasheamos el core:

openFPGALoader -f ~/Downloads/atarist.fs

-Flasheamos las TOS (El orden de flasheo de las TOS es: TOS de ST primaria, TOS de STE primaria, TOS de ST secundaria, TOS de STE secundaria)

openFPGALoader --external-flash -o 0x100000 tos104us.img
openFPGALoader --external-flash -o 0x140000 tos206us.img
openFPGALoader --external-flash -o 0x180000 tos104es.img
openFPGALoader --external-flash -o 0x1c0000 tos206es.img

-¡¡¡OJO!!! Las imágenes de disco duro deben tener extensión .HD

-Para más compatibilidad con juegos y demos (el ST es una máquina principalmente europea), configúralo como un STE PAL con 4MB de RAM.

FLASHEAR EL CORE DE C64 Y LAS ROMS DE SISTEMA
=============================================

openFPGALoader -f tang_nano_20k_c64.fs

openFPGALoader --external-flash -o 0x200000 "c1541 DOS Dolphin 2.rom"
openFPGALoader --external-flash -o 0x20C000 "c1541 DOS CBM.rom"
openFPGALoader --external-flash -o 0x214000 "c1541 DOS Speeddos Plus.rom"
openFPGALoader --external-flash -o 0x21C000 "c1541 DOS Jiffy.rom"

AHORA necesitas es el kernal original de C64, que puedes descargar de aquí: http://www.zimmers.net/anonftp/pub/cbm/firmware/computers/c64/
y se llama kernal.901227-03.bin. Guárdalo en raíz de la SD como "c64kernal.bin".
Para asegurar la máxima compatibilidad con juegso, cuando arranques el core:
-En STORAGE->C64 KERNAL, selecciona el "c64kernal.bin".
-En SYSTEM->C1541 ROM, selecciona "CBM DOS".
-En SETTINGS, dale a SAVE SETTINGS y reinicia.
(Si no lo haces, arrancará con el DolphinDOS kernal que es menos compatible, de hecho no permite cargar .TAP).

FLASHEAR EL BL616 (M0S), TANTO EL INTERNO DE LA TANG NANO 20K COMO EL EXTERNO SI TIENES UNO
===========================================================================================

RECUERDA QUE EL USB/TTL QUE TIENES QUE USAR ES EL QUE TIENE EL CHIP FTDI, ES DECIR, EL QUE VA AL ORDENADOR CON UN CABLE USB MINI-USB.
RECUERDA que si usas el interno de la TANG NANO 20K, tendrás que volver a meterle su firmware original de fábrica para poder volver a flashearlo.

-Nos bajamos el Bouffalo Lab Dev Cube de aquí: https://dev.bouffalolab.com/download
-Conectamos el adapador USB/TTL al PC, y los cables a los pines SERIAL de la placa de la MisteryNano (hay que usar los cables GND, 5V, TX/RX, y DTR)
con el TX/RX cruzados pero sin conectar aún el cable de 5V. Entonces, manteniendo pulsado el botón BOOT, conectamos el cable de 5V.
-Manteniendo pulsado el botón BOOT, abrimos el Bouffalo Lab Dev Cube, nos vamos a la pestaña MCU, le damos a OPEN UART,
seleccionamos el .bin que queramos flashear, y le damos a "CREATE AND DOWNLOAD".

ERRORES Y SOLUCIONES AL FLASHEAR EL BL616:
-Si te da error con el handshake: no has cruzado los cables TX y RX (lo que es TX en un extremo, va al RX del otro).
-Si te da error leyendo la MAC del BL616 (pero el handshake sí se hizo bien): el adaptador USB/TTL no es compatible o no funciona bien,
prueba con otro.
