PARA FLASHEAR UN SO A LA EMMC
=============================

INTRODUCCIÓN: Los modelos de CM4 que tienen EMMC no pueden arrancar a la vez desde EMMC y desde SD, así que no podemos simplemente flashearles
un sistema a la SD y esperar que arranque, se lo tenemos que flashear a la EMMC interna.
Para ello usamos usbboot, que arranca la CM4 de tal modo que nos permite flashearle un sistema a la EMMC.

Unas dependencias previas:
sudo apt-get install libusb-1.0-0-dev

Compilamos e instalamos:
https://github.com/raspberrypi/usbboot

Conectamos la GPI CASE 2 por el puerto microUSB al ordenador (el puerto de arriba, el que queda detrás de la tapa, NO el de abajo que es USB-C)
y ejecutamos:
sudo rpiboot

Si todo va bien, en /dev ya tendremos la emmc como /dev/sdb.

Si es así, ya podemos flashear a /dev/sdb con algo como:
sudo dd if=Lakka-RPi4-GPICase.img of=/dev/sdb bs=4M status=progress

Una vez que se haya flasheado, ya podemos acceder a las particiones boot y root del SO.

LAKKA EN LA GPI CASE 2
======================

Hay una imágen preparada en el canal de DISCORD de la GPI CASE 2, de momento en la sala de betatesting.

CONFIGURAR LINUX PARA QUE USE LA PANTALLA DPI DE LA CONSOLA
============================================================

Lo que sabemos proviene cicirifu, autor del Lakka para GPI CASE 2.
Búscale en Discord, en el server de GPI CASE.

-En config.txt, tenemos que tener esto para configurar la pantalla con los specs del fabricante:
dtoverlay=vc4-kms-v3d,cma-size=402653184
dtoverlay=vc4-kms-dpi-generic,clock-frequency=24000000
dtparam=hactive=640,hfp=41,hsync=40,hbp=41
dtparam=vactive=480,vfp=18,vsync=9,vbp=18
dtparam=rgb666-padhi

-En cmdline.txt tenemos que pasar al kernel esto:
video="DPI-1:640x480@60"

-Para el audio, tenemos que seleccionar el CARD/DEVICE por defecto para ALSA, y además, como sólo uno de los canales del estéreo
está conectado al altavoz, tenemos que conseguir sonido MONO mezclando ambos canales.
Para ambas cosas (seleccionar el dispositivo, mezclar el sonido en MONO) tenemos que hacer estas cosas.
Debemos tener esto en /etc/asound.conf:

defaults.pcm.!card Device
defaults.ctl.!card Device
defaults.pcm.!device 0
defaults.ctl.!device 0

...Y luego usar el plugin MONO en settings->audio->dsp_plugin.
Para ello, dentro de los sources de RetroArch, vamos al directorio "libretro-common/audio/dsp_filters" y compilamos los filtros así:
CFLAGS="-march=native -mtune=native -O2" make -j4
Ahora copiamos todos los filtros a "~/.config/retroarch/filters/audio/", así:
cp *.so *.dsp ~/.config/retroarch/filters/audio/
Ahora, en RetroArch vamos a "settings->audio->dsp plugin" y seleccionamos "Mono.dsp".
Y ya está. 

-Para no tener nada por pantalla, desactivar mitigations, polling rápido de mandos USB, poner el governor a performance, etc...
la línea del kernel en cmdline.txt queda así:

console=tty1 root=PARTUUID=048e5591-02 rootfstype=ext4 fsck.repair=yes rootwait video="DPI-1:640x480@60" quiet loglevel=0 logo.nologo vt.global_cursor_default=0 mitigations=off audit=0 mce=ignore_ce nosoftlockup usbhid.jspoll=1 xpad.cpoll=1 consoleblank=0 cpufreq.default_governor=performance

(Luego, en config.txt pon arm_freq a 1200 y así se mantendrá constante sin saltos del scheduler porque has puesto el governor a performance).

-Para que el mando se autoconfigure (si es un mando conocido o compatible con uno conocido: la mayoría de ellos los reconoce como XBOX360 PAD)
tienes que clonar:
git clone --depth 1 https://github.com/libretro/retroarch-joypad-autoconfig.git
Y meter el directorio "udev" en ~/.config/retroarch/autoconfig/
Esto es imprescindible en consolas sin teclado, porque si no, no tienes manera de configurar el mando al arrancar el RetroArch al principio.

-Para establecer el directorio de inicio del navegador de RetroArch, uses el GUI que uses, debes editar retroarch.cfg
y establecer el path con "rgui_browser_directory", como por ejemplo:
rgui_browser_directory = "~/roms"

-Para que RetroArch te ofrezca con qué emulador quieres correr una ROM, tienes que clonar este repo:
git clone --depth 1 https://github.com/libretro/libretro-super.git
Y mandar el contenido del directorio libretro-super/dist/info a ~/.config/retroarch/cores. Sí, junto con los cores. Así:
cp -R libretro-super/dist/info/* ~/.config/retroarch/cores/
Ahora en RetroArch, en Settings->Core, desactiva "Cache core info files".
Y elimina ".config/retroarch/cores/core_info.cache".
(Si no haces estas últimas dos cosas, no funcionará, y no sabrás por qué).

-La GPI CASE 2 sólo tiene conectado al altavoz UNO de los canales de audio, a pesar de que el sistema de audio es estéreo.
Así que necesitamos mezclar los dos canales a uno solo, o en sistemas estéreo perdemos la mitad de los sonidos.


CONFIGURAR LA DISTRO EXPERIMENTAL DEL LAKKA DEL CANAL "RETROFLAG GPI CASE USERS" DE DISCORD
===========================================================================================

Para el sonido:
-Editamos el UNIT de PULSEAUDIO para deshabilitarlo. Para ello, hacemos "systemctl edit --full pulseaudio" y eliminamos la línea de ExecStart,
dejándolo así inútil (deshabilitar el servicio no vale porque no sobreviviría a un reinicio, parece ser).
-Ahora elegimos como driver de audio el ALSA, y como dispositivo de audio, escribimos manualmente "plughw:2,0"
-Nos conectamos por SSH, y editamos /storage/.config/retroarch/retroarch.cfg para poner el max_swapchain a 2. 
-Para quitar el ruido del wifi en el altavoz, edita /flash/config.txt y le añades: dtoverlay=disable-wifi
 (Para editar config.txt tienes que re-montar la partición flash como lectura/escritura, con: mount -o remount,rw /dev/mmcblk0p1)
