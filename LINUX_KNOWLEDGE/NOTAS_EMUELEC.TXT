Los scripts de inicio para systemd están en:

/usr/lib/systemd/system/


Accediendo por ssh, user/pass es root/351elec o root/emuelec


Lo primero es activar el servicio retroarch, y deshabilitar el servicio emustation:
systemctl unmask retroarch
systemctl enable retroarch
systemctl mask emustation
(NO deshabilites el emuelec.target, porque es el que hace que se lance retroarch.service cuando
retroarch.service está habilitado).

El servicio emuelec-autostart.service NO lo quites, porque ahí puedes meter lo que quieras.
Por ejemplo, el control del brillo se hace ahí, mandándole un valor a un fichero en /sys/class.
(Vamos, que lo puedes dejar sólo con eso).
echo 75 >/sys/class/backlight/backlight/brightness

Ahora, como queremos cambiar la UNIT de retroarch.service, lo primero hacemos una copia del archivo
al lugar donde se guardan los scripts en sus versiones modificables, o los link simbólicos cuando
maskeamos un servicio, es decir: copiamos retroarch.service a /storage/.config/system.d/:
cp /usr/lib/systemd/system/retroarch.service /storage/.config/system.d/

Y ahora editamos la UNIT de retroarch:
vi /storage/.config/system.d/retroarch.service
Eliminamos la línea de ExecStartPre
Y añadimos en la sección [Unit]:
FailureAction=poweroff-force
SuccessAction=poweroff-force
Y comentamos lo de ConditionPathExists.

Alterar autostart.sh requiere que primero cambiemos qué fichero autostart.sh queremos que se ejecute,
y después editar ese fichero autostart.sh y dejarlo como nosotros queremos.
Como queremos cambiar la UNIT de emuelec.autostart, pimero hacemos una copia editable:
cp /usr/lib/systemd/system/emuelec-autostart.service /storage/.config/system.d/
La editamos:
vi /storage/.config/system.d/emuelec-autostart.service
Y cambiamos la línea:
ExecStart=-/bin/sh -c ". /etc/profile; exec /bin/sh /usr/config/autostart.sh"
Por la línea:
ExecStart=-/bin/sh -c ". /etc/profile; exec /bin/sh /storage/autostart.sh"
Ahora ya sabemos que el autostart que se va a ejecutar es el /storage/autostart.sh,
el cual podemos cambiar a nuestro gusto.
Así que nos hacemos una copia editable del autostart.sh:
cp /usr/config/autostart.sh /storage/autostart.sh
Y la editamos:
vi /storage/autostart.sh
Y quitamos la creación de directorios de la parte de "for dir in".
En realidad, aquí con que dejemos que mande la luminosidad a la pantalla es suficiente.
También puedes cambiar nomperf por maxperf.
Todo lo demás, quítalo: NO tiene que gestionar si arranca retroarch o emustation, NO tiene que gestionar el servidor ssh... NADA.

Servicios que podemos maskear tranquilamente:
(Ya sabes que si te equivocas al maskear algún servicio, o al editarlo, basta con borra su copia
o su link a /dev/null de la SD metida en el ordenador, que los tienes en STORAGE/.config/system.d/)

systemctl mask pulseaudio
systemctl mask avahi-daemon
systemctl mask connman-vpn
systemctl mask debug-shell
systemctl mask systemd-journald
systemctl mask systemd-journald.socket
systemctl mask systemd-journald-dev-log.socket
systemctl mask userconfig
systemctl mask swap.service
systemctl mask swap.target

--NO quites el servicio systemd-logind si quieres que la máquina se hiberne pulsando una vez el botón de powe.

--SERVICIOS QUE HACEN FALTA PARA ACCEDER POR SSH:
connman
dbus.socket
CONNMAN es el gestor de conexiones mínimo para sistemas embedidos.
DBUS hace falta para que RetroArch encuentre la red.

Ahora hacemos que NO monte la partición FAT32 estúpida esa
systemctl mask var-media-GAMES.mount
Y la borramos, y expandimos STORAGE con gparted.

Puedes borrar los cores que quieras de /tmp/cores/
Originalmente los coge de /STORAGE/cores.

--Para evitar que re-cree los directorios en /STORAGE/roms (que son creados en /tmpfiles.d/emuelec-dirs.conf,
que es leido por systemd-tmpfiles-setup.service, y no podemos deshabilitar systemd-tmpfiles-setup.service
porque entonces no conecta la wifi), lo que hacemos es cambiar el contenido de emuelec-dirs.conf:
cp /usr/lib/tmpfiles.d/emuelec-dirs.conf /storage/.config/tmpfiles.d/
Y luego editar
vi /storage/.config/tmpfiles.d/emuelec-dirs.conf
Y quitar de ahí los directorios que se están creando (o sea, puedes dejar el fichero vacío entero).
