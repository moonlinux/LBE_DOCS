LISTA DE CORES OPENFPGA DE LA COMUNIDAD: https://openfpga-cores-inventory.github.io/analogue-pocket/
LISTA DE CORES OPENFPGA DEL FABRICANTE: https://github.com/spiritualized1997?tab=repositories

ACTUALIZAR LOS CORES E INSTALAR LAS ROMS ARCADE, AUTOMÁTICAMENTE
================================================================

Nos bajamos la última versión estable del updater de:
https://github.com/mattpannella/pupdate/releases
La descomprimimos a un directorio del ordenador (NO a la tarjeta SD!!!) y ejecutamos el updater apuntando a la tarjeta, así:
./pupdate -p /media/manuel/POCKET

Lo primero, entra en la opción SELECT CORES (3) para ir seleccionando los cores que quieres con ENTER, y luego ya vuelves al menú principal
y le das a UPDATE ALL.

INSTALAR CORES OPENFPGA A MANO
==============================

Cada core tiene que incluir los directorios Assets, Cores, Platforms y Settings, cuyos contenidos
tienes que copiar a los directorios con los mismos nombres que hay en la raiz de la microSD.

Cualquier ROM que puedas necesitar está en:
https://archive.org/download/openFPGA-Files

AÑADIR DISPLAY MODES
====================

A parte de que el pocket_updater lo hace automáticamente desde una opción del menú, podemos hacerlo nosotros a mano editando el "video.json"
del core que queramos, y añadiendo los modos de la tabla que viene aquí: https://www.analogue.co/developer/docs/core-definition-files/video-json

AÑADIR ROMS DE NEOGEO
=====================

Aunque al instalar los cores con PUPDATE se te instalarán casi todas las ROMs de NEOGEO, si necesitas añadir ROMs que no vienen instaladas
como la del Xenocrisis (que la tienes en el disco duro de backup), tienes que instalar las de "Darksoft",
no las de MiSTer, y meter la ROM que quieras sin comprimir en Assets/ng/common/<nombre_juego>
Tienes todas las ROMs en el formato adecuado en https://archive.org/download/multipacks

COMPILAR CORES PARA LA POCKET
=============================

Lo primero es que uses la versión LITE del Quartus, ya que la FULL es de pago (cuesta unos 3000 euros) e incluso si la usas en modo evaluación
no te genera el .RBF que necesitamos.
Para descargar la LITE busca "Quartus lite download". Yo uso la 21.1 que no es la última pero es la que usa el porter del core de PC Engine y NES.

Todos los cores tienen un directorio "projects" y dentro un fichero .QIP, que es el que tienes que abrir en Quartus.
Simplemente le das a la flecha azul y empieza la compilación.

Ahora, usando este sencillo programa en C (se compila con gcc sin más) inviertes el RBF, lo renombras a .REV y ya tienes el core listo:
https://www.analogue.co/developer/docs/packaging-a-core#fpga-bitstream

ELCHEAPOSD
==========

Para preparar la SD de ElCheapoSD, lo primero es formatearla a FAT32.
Ahora necesitas meter el "BOOT.BIN" de ATARIGAMER, que está aquí: https://atarilynxvault.itch.io/elcheaposd-menu
MUY IMPORTANTE: También necesitas el fichero "CONFIG.BIN", que viene en versiones más antiguas del menú de ATARIGAMER,
y también necesitas crear en el raiz de la tarjeta el directorio "SAVES".
Total que nos tiene que quedar:

BOOT.BIN
CONFIG.BIN
SAVES/
*.lnx

OJO CON LOS JUEGOS: Los juegos tienen que estar en LNX, PERO no son los de NO-INTRO, necesitas que sean .LNX CON CABECERA:
se puede saber si valen editándolos con un editor de texto y mirando que empiezen por "LYNX", así literalmente en texto.
Si no tienen la cadena "LYNX" al principio, no valen y nos dará ERROR.
En el disco de backup tienes todos los juegos comerciales de Lynx en el formato adecuado para ElCheapoSD.
Si necesitas convertir un juego al formato correcto, usa https://github.com/42Bastian/new_bll
